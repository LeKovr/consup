# iac.tender.pro backend Makefile
SHELL    = /bin/bash
PRG     ?= $(shell basename $$PWD)
CFG     ?= .config

APP_SITE ?= mm.dev.lan
DB_NAME  ?= mmost

all: start

define CONFIG_DEF
# iac config file, generated by make $(CFG)
APP_SITE=$(APP_SITE)
DB_NAME=$(DB_NAME)
endef
export CONFIG_DEF

start: vars
	@echo "*** $@ ***"
	@source $(CFG) && \
fidm rm mode=proxy name=$$APP_SITE ; \
fidm start mode=proxy name=$$APP_SITE args_add=--env=DB_NAME=$$DB_NAME

stop: $(CFG)
	@echo "*** $@ ***"
	@source $(CFG) && \
fidm rm mode=proxy name=$$APP_SITE args_add=--env=DB_NAME=$$DB_NAME

stopall: $(CFG)
	@echo "*** $@ ***"
	@source $(CFG) && \
fidm rm -a mode=proxy name=$$APP_SITE args_add=--env=DB_NAME=$$DB_NAME

psql: $(CFG)
	@echo "*** $@ ***"
	source $(CFG) && \
docker exec -ti "$(PRG)_$${APP_SITE}_www" make $@-inside

psql-inside:
	PGPASSWORD=$${DB_PASS} psql       -U $${DB_NAME} -h $${PG_HOST} -d $${DB_NAME}


clean:
	@echo "*** $@ ***"
	[ ! -f $(CFG) ] || rm $(CFG)

vars: $(CFG) ~/.fidmrc

# настройка контейнеров consup
~/.fidmrc:
	@echo "*** $@ ***"
	@echo "cfg[creator]=lekovr" > $@

$(CFG):
	@echo "*** $@ ***"
	@[ -f $@ ] || echo "$$CONFIG_DEF" > $@

deps:
	@echo "*** $@ ***"
	# code from http://docs.docker.com/linux/step_one/
	which docker > /dev/null || wget -qO- https://get.docker.com/ | sh
	# code from https://github.com/LeKovr/fidm
	which fidm > /dev/null || wget -qO- https://raw.githubusercontent.com/LeKovr/fidm/master/install.sh | sh
	# Каталог **consup** дожен быть доступен из каталога **iac** как `../consup` или `../../consup`.
	cd .. &&[ -d consup ] || [ -d ../consup ] || git clone https://github.com/LeKovr/consup.git
	# контейнеры Docker
	for n in consul nginx postgres mattermost ; do docker pull lekovr/consup_$$n ; done
	@echo Done

.PHONY: all push remote build restore deps

