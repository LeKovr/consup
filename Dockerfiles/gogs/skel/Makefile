# consup project Makefile
SHELL    = /bin/bash
PRG     ?= $(shell basename $$PWD)
CFG     ?= .config

# docker images для "make deps"
CONSUP_IMAGES = consul nginx postgres gogs


# Имя конфигурации nginx из контейнера consup_nginx
NGINX_MODE ?= proxy

# Полный путь к текущему каталогу
APP_ROOT ?= $(shell dirname $$PWD)
# Имя текущего каталога
APP_PATH ?= $(shell basename $$PWD)

# каталог, в котором размещен consup/
CONSUP_ROOT ?= $(shell dirname $(APP_ROOT))

# имя сайта для контейнера (см .config)
APP_SITE ?= gogs.dev.lan

# имя БД
DB_NAME  ?= gogs

# Файл .config
define CONFIG_DEF
# project config file, generated by make $(CFG)
APP_SITE=$(APP_SITE)
DB_NAME=$(DB_NAME)
endef
export CONFIG_DEF

all: start

## настройка контейнера из CI хука
setup: $(CFG)

## старт контейнера из CI хука
start-hook: startonly

## стартовать контейнер, предварительно удалив старый, если был
start: stop startonly

## стартовать контейнер, ничего не удаляя
startonly: $(CFG)
	@echo "*** $@ ***"
	@source $(CFG) && \
  fidm start mode=$(NGINX_MODE) name=$$APP_SITE \
    args_add=--env=DB_NAME=$$DB_NAME \
    args_add=--volume=$(APP_ROOT)/$(APP_PATH):/home/app \
    args_add=--volume=$(APP_ROOT)/$(APP_PATH)/conf:/opt/gogs/custom/conf \
    args_add=--volume=$(APP_ROOT)/$(APP_PATH)/data:/opt/gogs/data \
    args_add=--volume=$(APP_ROOT)/../log/http/$(APP_PATH):/var/log/nginx \
    args_add=--volume=$(APP_ROOT)/../log/$(APP_PATH):/var/log/supervisor \
    args_add=--volume=$(CONSUP_ROOT)/consup/app/shared:/opt/shared

xx:
	echo $(CONSUP_ROOT)

## остановить и удалить контейнер
stop: $(CFG)
	@echo "*** $@ ***"
	@source $(CFG) && \
  fidm rm mode=$(NGINX_MODE) name=$$APP_SITE

## остановить и удалить контейнер и все контейнеры, от которых он зависит
stopall: $(CFG)
	@echo "*** $@ ***"
	@source $(CFG) && \
  fidm rm -a mode=$(NGINX_MODE) name=$$APP_SITE

$(CFG):
	@echo "*** $@ ***"
	@[ -f $@ ] || echo "$$CONFIG_DEF" > $@

# ------------------------------------------------------------------------------
# psql

## запуск psql
psql: $(CFG)
	@echo "*** $@ ***"
	source $(CFG) && \
docker exec -ti "$(PRG)_$${APP_SITE}_www" make $@-inside

# запуск psql внутри контейнера
psql-inside:
	PGPASSWORD=$${DB_PASS} psql       -U $${DB_NAME} -h $${PG_HOST} -d $${DB_NAME}

# ------------------------------------------------------------------------------
# Docker

## установка зависимостей
deps:
	@echo "*** $@ ***"
	@echo "Consup root: $(CONSUP_ROOT)"
	# code from http://docs.docker.com/linux/step_one/
	which docker > /dev/null || wget -qO- https://get.docker.com/ | sh
	# code from https://github.com/LeKovr/fidm
	which fidm > /dev/null || wget -qO- https://raw.githubusercontent.com/LeKovr/fidm/master/install.sh | sh
	# Каталог **consup** должен быть доступен из текущего каталога как `../consup` или `../../consup`.
	[[ -d $(CONSUP_ROOT)/consup ]] || cd $(CONSUP_ROOT) && wget -qO- https://raw.githubusercontent.com/LeKovr/consup/master/install.sh | sh
	# контейнеры Docker
	for n in $(CONSUP_IMAGES) ; do docker pull lekovr/consup_$$n ; done
	@echo Done

.PHONY: all setup start startonly stop stopall
